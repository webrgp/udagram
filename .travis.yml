language: minimal

services:
  - docker

jobs:
  include:
    - stage: build
      if: branch = master
      install:
        # Install AWS CLI
        - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        - unzip awscliv2.zip
        - sudo ./aws/install
        - export PATH=~/bin:$PATH

        # Check if aws CLI is installed
        - aws --version

        # Create aws dir
        - mkdir ${HOME}/.aws

        # Add AWS Configs and credentials
        - echo "$AWS_CONFIG" | base64 --decode > ${HOME}/.aws/config
        - echo "$AWS_CREDENTIALS" | base64 --decode > ${HOME}/.aws/credentials

        # Install kubectl
        - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
        - chmod +x ./kubectl
        - sudo mv ./kubectl /usr/local/bin/kubectl
        - mkdir ${HOME}/.kube
        - echo "$KUBE_CONFIG" | base64 --decode > ${HOME}/.kube/config
      before_script:
        # Check communication with EKS
        - kubectl get pods
      script:
        # Print docker version
        - docker --version
        # Build all images for production
        - make build-images
      after_success:
        # Push Docker images to Docker Hub
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - make push-images
        # k8s-set-env: ## Set Env Variables
        - make k8s-set-env
        # Add Env variables to EKS
        - make k8s-env
        # Apply Deployments and Services to EKS
        - make k8s-deploy
        # Deploy new images to EKS
        - make k8s-deploy-images
        # Check
        - kubectl get pods
        - kubectl get deployments
        - kubectl get services
